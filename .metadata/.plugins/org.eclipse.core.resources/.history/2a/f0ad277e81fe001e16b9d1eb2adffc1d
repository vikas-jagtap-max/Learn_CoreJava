package com.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;

//Way1: Customizing our own Authentication manager
@Configuration
@EnableWebSecurity
public class SecurityConfiguration {

	// Authentication: Configuring user-name, password and authorities
	@Bean
	public UserDetailsService userDetailsService() {

		UserDetails user1 = User.builder().username("Vikas").password(passwordEncoder().encode("Vikas@123"))
				.roles("Admin").build();

		UserDetails user2 = User.builder().username("Vinayak").password(passwordEncoder().encode("Vinayak@123"))
				.roles("Admin").build();
		return new InMemoryUserDetailsManager(user1, user2);

	}

	// The passwordEncorder to be used.
	@Bean
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}

	// Authorization:

}
